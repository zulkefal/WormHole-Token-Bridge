// SPDX-License-Identifier: Apache 2
pragma solidity ^0.8.24;

import "wormhole-sdk/libraries/BytesParsing.sol";

// This file was auto-generated by wormhole-solidity-sdk gen/libraryTestWrapper.ts

contract BytesParsingTestWrapper {
  function checkBound(uint offset, uint length) external pure  {
    BytesParsing.checkBound(offset, length);
  }

  function sliceCdUnchecked(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceCdUnchecked(encoded, offset, length);
  }

  function sliceUnchecked(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUnchecked(encoded, offset, length);
  }

  function checkLengthCd(bytes calldata encoded, uint256 expected) external pure  {
    BytesParsing.checkLengthCd(encoded, expected);
  }

  function sliceCd(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceCd(encoded, offset, length);
  }

  function checkLength(bytes calldata encoded, uint256 expected) external pure  {
    BytesParsing.checkLength(encoded, expected);
  }

  function slice(
    bytes calldata encoded,
    uint offset,
    uint length
  ) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.slice(encoded, offset, length);
  }

  function sliceUint8PrefixedCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint8PrefixedCdUnchecked(encoded, offset);
  }

  function sliceUint8PrefixedCd(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint8PrefixedCd(encoded, offset);
  }

  function sliceUint8PrefixedUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint8PrefixedUnchecked(encoded, offset);
  }

  function sliceUint8Prefixed(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint8Prefixed(encoded, offset);
  }

  function sliceUint16PrefixedCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint16PrefixedCdUnchecked(encoded, offset);
  }

  function sliceUint16PrefixedCd(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint16PrefixedCd(encoded, offset);
  }

  function sliceUint16PrefixedUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint16PrefixedUnchecked(encoded, offset);
  }

  function sliceUint16Prefixed(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint16Prefixed(encoded, offset);
  }

  function sliceUint32PrefixedCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint32PrefixedCdUnchecked(encoded, offset);
  }

  function sliceUint32PrefixedCd(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint32PrefixedCd(encoded, offset);
  }

  function sliceUint32PrefixedUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint32PrefixedUnchecked(encoded, offset);
  }

  function sliceUint32Prefixed(bytes calldata encoded, uint offset) external pure returns (bytes memory ret, uint nextOffset)  {
    return BytesParsing.sliceUint32Prefixed(encoded, offset);
  }

  function asAddressCdUnchecked(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset)  {
    return BytesParsing.asAddressCdUnchecked(encoded, offset);
  }

  function asAddressCd(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset)  {
    return BytesParsing.asAddressCd(encoded, offset);
  }

  function asAddressUnchecked(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset)  {
    return BytesParsing.asAddressUnchecked(encoded, offset);
  }

  function asAddress(bytes calldata encoded, uint offset) external pure returns (address ret, uint nextOffset)  {
    return BytesParsing.asAddress(encoded, offset);
  }

  function asBoolCdUnchecked(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset)  {
    return BytesParsing.asBoolCdUnchecked(encoded, offset);
  }

  function asBoolCd(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset)  {
    return BytesParsing.asBoolCd(encoded, offset);
  }

  function asBoolUnchecked(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset)  {
    return BytesParsing.asBoolUnchecked(encoded, offset);
  }

  function asBool(bytes calldata encoded, uint offset) external pure returns (bool ret, uint nextOffset)  {
    return BytesParsing.asBool(encoded, offset);
  }

  function asUint8CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset)  {
    return BytesParsing.asUint8CdUnchecked(encoded, offset);
  }

  function asUint8Cd(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset)  {
    return BytesParsing.asUint8Cd(encoded, offset);
  }

  function asUint8Unchecked(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset)  {
    return BytesParsing.asUint8Unchecked(encoded, offset);
  }

  function asUint8(bytes calldata encoded, uint offset) external pure returns (uint8 ret, uint nextOffset)  {
    return BytesParsing.asUint8(encoded, offset);
  }

  function asUint16CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset)  {
    return BytesParsing.asUint16CdUnchecked(encoded, offset);
  }

  function asUint16Cd(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset)  {
    return BytesParsing.asUint16Cd(encoded, offset);
  }

  function asUint16Unchecked(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset)  {
    return BytesParsing.asUint16Unchecked(encoded, offset);
  }

  function asUint16(bytes calldata encoded, uint offset) external pure returns (uint16 ret, uint nextOffset)  {
    return BytesParsing.asUint16(encoded, offset);
  }

  function asUint24CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset)  {
    return BytesParsing.asUint24CdUnchecked(encoded, offset);
  }

  function asUint24Cd(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset)  {
    return BytesParsing.asUint24Cd(encoded, offset);
  }

  function asUint24Unchecked(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset)  {
    return BytesParsing.asUint24Unchecked(encoded, offset);
  }

  function asUint24(bytes calldata encoded, uint offset) external pure returns (uint24 ret, uint nextOffset)  {
    return BytesParsing.asUint24(encoded, offset);
  }

  function asUint32CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset)  {
    return BytesParsing.asUint32CdUnchecked(encoded, offset);
  }

  function asUint32Cd(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset)  {
    return BytesParsing.asUint32Cd(encoded, offset);
  }

  function asUint32Unchecked(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset)  {
    return BytesParsing.asUint32Unchecked(encoded, offset);
  }

  function asUint32(bytes calldata encoded, uint offset) external pure returns (uint32 ret, uint nextOffset)  {
    return BytesParsing.asUint32(encoded, offset);
  }

  function asUint40CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset)  {
    return BytesParsing.asUint40CdUnchecked(encoded, offset);
  }

  function asUint40Cd(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset)  {
    return BytesParsing.asUint40Cd(encoded, offset);
  }

  function asUint40Unchecked(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset)  {
    return BytesParsing.asUint40Unchecked(encoded, offset);
  }

  function asUint40(bytes calldata encoded, uint offset) external pure returns (uint40 ret, uint nextOffset)  {
    return BytesParsing.asUint40(encoded, offset);
  }

  function asUint48CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset)  {
    return BytesParsing.asUint48CdUnchecked(encoded, offset);
  }

  function asUint48Cd(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset)  {
    return BytesParsing.asUint48Cd(encoded, offset);
  }

  function asUint48Unchecked(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset)  {
    return BytesParsing.asUint48Unchecked(encoded, offset);
  }

  function asUint48(bytes calldata encoded, uint offset) external pure returns (uint48 ret, uint nextOffset)  {
    return BytesParsing.asUint48(encoded, offset);
  }

  function asUint56CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset)  {
    return BytesParsing.asUint56CdUnchecked(encoded, offset);
  }

  function asUint56Cd(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset)  {
    return BytesParsing.asUint56Cd(encoded, offset);
  }

  function asUint56Unchecked(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset)  {
    return BytesParsing.asUint56Unchecked(encoded, offset);
  }

  function asUint56(bytes calldata encoded, uint offset) external pure returns (uint56 ret, uint nextOffset)  {
    return BytesParsing.asUint56(encoded, offset);
  }

  function asUint64CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset)  {
    return BytesParsing.asUint64CdUnchecked(encoded, offset);
  }

  function asUint64Cd(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset)  {
    return BytesParsing.asUint64Cd(encoded, offset);
  }

  function asUint64Unchecked(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset)  {
    return BytesParsing.asUint64Unchecked(encoded, offset);
  }

  function asUint64(bytes calldata encoded, uint offset) external pure returns (uint64 ret, uint nextOffset)  {
    return BytesParsing.asUint64(encoded, offset);
  }

  function asUint72CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset)  {
    return BytesParsing.asUint72CdUnchecked(encoded, offset);
  }

  function asUint72Cd(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset)  {
    return BytesParsing.asUint72Cd(encoded, offset);
  }

  function asUint72Unchecked(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset)  {
    return BytesParsing.asUint72Unchecked(encoded, offset);
  }

  function asUint72(bytes calldata encoded, uint offset) external pure returns (uint72 ret, uint nextOffset)  {
    return BytesParsing.asUint72(encoded, offset);
  }

  function asUint80CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset)  {
    return BytesParsing.asUint80CdUnchecked(encoded, offset);
  }

  function asUint80Cd(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset)  {
    return BytesParsing.asUint80Cd(encoded, offset);
  }

  function asUint80Unchecked(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset)  {
    return BytesParsing.asUint80Unchecked(encoded, offset);
  }

  function asUint80(bytes calldata encoded, uint offset) external pure returns (uint80 ret, uint nextOffset)  {
    return BytesParsing.asUint80(encoded, offset);
  }

  function asUint88CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset)  {
    return BytesParsing.asUint88CdUnchecked(encoded, offset);
  }

  function asUint88Cd(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset)  {
    return BytesParsing.asUint88Cd(encoded, offset);
  }

  function asUint88Unchecked(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset)  {
    return BytesParsing.asUint88Unchecked(encoded, offset);
  }

  function asUint88(bytes calldata encoded, uint offset) external pure returns (uint88 ret, uint nextOffset)  {
    return BytesParsing.asUint88(encoded, offset);
  }

  function asUint96CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset)  {
    return BytesParsing.asUint96CdUnchecked(encoded, offset);
  }

  function asUint96Cd(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset)  {
    return BytesParsing.asUint96Cd(encoded, offset);
  }

  function asUint96Unchecked(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset)  {
    return BytesParsing.asUint96Unchecked(encoded, offset);
  }

  function asUint96(bytes calldata encoded, uint offset) external pure returns (uint96 ret, uint nextOffset)  {
    return BytesParsing.asUint96(encoded, offset);
  }

  function asUint104CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset)  {
    return BytesParsing.asUint104CdUnchecked(encoded, offset);
  }

  function asUint104Cd(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset)  {
    return BytesParsing.asUint104Cd(encoded, offset);
  }

  function asUint104Unchecked(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset)  {
    return BytesParsing.asUint104Unchecked(encoded, offset);
  }

  function asUint104(bytes calldata encoded, uint offset) external pure returns (uint104 ret, uint nextOffset)  {
    return BytesParsing.asUint104(encoded, offset);
  }

  function asUint112CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset)  {
    return BytesParsing.asUint112CdUnchecked(encoded, offset);
  }

  function asUint112Cd(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset)  {
    return BytesParsing.asUint112Cd(encoded, offset);
  }

  function asUint112Unchecked(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset)  {
    return BytesParsing.asUint112Unchecked(encoded, offset);
  }

  function asUint112(bytes calldata encoded, uint offset) external pure returns (uint112 ret, uint nextOffset)  {
    return BytesParsing.asUint112(encoded, offset);
  }

  function asUint120CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset)  {
    return BytesParsing.asUint120CdUnchecked(encoded, offset);
  }

  function asUint120Cd(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset)  {
    return BytesParsing.asUint120Cd(encoded, offset);
  }

  function asUint120Unchecked(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset)  {
    return BytesParsing.asUint120Unchecked(encoded, offset);
  }

  function asUint120(bytes calldata encoded, uint offset) external pure returns (uint120 ret, uint nextOffset)  {
    return BytesParsing.asUint120(encoded, offset);
  }

  function asUint128CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset)  {
    return BytesParsing.asUint128CdUnchecked(encoded, offset);
  }

  function asUint128Cd(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset)  {
    return BytesParsing.asUint128Cd(encoded, offset);
  }

  function asUint128Unchecked(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset)  {
    return BytesParsing.asUint128Unchecked(encoded, offset);
  }

  function asUint128(bytes calldata encoded, uint offset) external pure returns (uint128 ret, uint nextOffset)  {
    return BytesParsing.asUint128(encoded, offset);
  }

  function asUint136CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset)  {
    return BytesParsing.asUint136CdUnchecked(encoded, offset);
  }

  function asUint136Cd(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset)  {
    return BytesParsing.asUint136Cd(encoded, offset);
  }

  function asUint136Unchecked(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset)  {
    return BytesParsing.asUint136Unchecked(encoded, offset);
  }

  function asUint136(bytes calldata encoded, uint offset) external pure returns (uint136 ret, uint nextOffset)  {
    return BytesParsing.asUint136(encoded, offset);
  }

  function asUint144CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset)  {
    return BytesParsing.asUint144CdUnchecked(encoded, offset);
  }

  function asUint144Cd(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset)  {
    return BytesParsing.asUint144Cd(encoded, offset);
  }

  function asUint144Unchecked(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset)  {
    return BytesParsing.asUint144Unchecked(encoded, offset);
  }

  function asUint144(bytes calldata encoded, uint offset) external pure returns (uint144 ret, uint nextOffset)  {
    return BytesParsing.asUint144(encoded, offset);
  }

  function asUint152CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset)  {
    return BytesParsing.asUint152CdUnchecked(encoded, offset);
  }

  function asUint152Cd(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset)  {
    return BytesParsing.asUint152Cd(encoded, offset);
  }

  function asUint152Unchecked(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset)  {
    return BytesParsing.asUint152Unchecked(encoded, offset);
  }

  function asUint152(bytes calldata encoded, uint offset) external pure returns (uint152 ret, uint nextOffset)  {
    return BytesParsing.asUint152(encoded, offset);
  }

  function asUint160CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset)  {
    return BytesParsing.asUint160CdUnchecked(encoded, offset);
  }

  function asUint160Cd(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset)  {
    return BytesParsing.asUint160Cd(encoded, offset);
  }

  function asUint160Unchecked(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset)  {
    return BytesParsing.asUint160Unchecked(encoded, offset);
  }

  function asUint160(bytes calldata encoded, uint offset) external pure returns (uint160 ret, uint nextOffset)  {
    return BytesParsing.asUint160(encoded, offset);
  }

  function asUint168CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset)  {
    return BytesParsing.asUint168CdUnchecked(encoded, offset);
  }

  function asUint168Cd(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset)  {
    return BytesParsing.asUint168Cd(encoded, offset);
  }

  function asUint168Unchecked(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset)  {
    return BytesParsing.asUint168Unchecked(encoded, offset);
  }

  function asUint168(bytes calldata encoded, uint offset) external pure returns (uint168 ret, uint nextOffset)  {
    return BytesParsing.asUint168(encoded, offset);
  }

  function asUint176CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset)  {
    return BytesParsing.asUint176CdUnchecked(encoded, offset);
  }

  function asUint176Cd(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset)  {
    return BytesParsing.asUint176Cd(encoded, offset);
  }

  function asUint176Unchecked(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset)  {
    return BytesParsing.asUint176Unchecked(encoded, offset);
  }

  function asUint176(bytes calldata encoded, uint offset) external pure returns (uint176 ret, uint nextOffset)  {
    return BytesParsing.asUint176(encoded, offset);
  }

  function asUint184CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset)  {
    return BytesParsing.asUint184CdUnchecked(encoded, offset);
  }

  function asUint184Cd(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset)  {
    return BytesParsing.asUint184Cd(encoded, offset);
  }

  function asUint184Unchecked(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset)  {
    return BytesParsing.asUint184Unchecked(encoded, offset);
  }

  function asUint184(bytes calldata encoded, uint offset) external pure returns (uint184 ret, uint nextOffset)  {
    return BytesParsing.asUint184(encoded, offset);
  }

  function asUint192CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset)  {
    return BytesParsing.asUint192CdUnchecked(encoded, offset);
  }

  function asUint192Cd(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset)  {
    return BytesParsing.asUint192Cd(encoded, offset);
  }

  function asUint192Unchecked(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset)  {
    return BytesParsing.asUint192Unchecked(encoded, offset);
  }

  function asUint192(bytes calldata encoded, uint offset) external pure returns (uint192 ret, uint nextOffset)  {
    return BytesParsing.asUint192(encoded, offset);
  }

  function asUint200CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset)  {
    return BytesParsing.asUint200CdUnchecked(encoded, offset);
  }

  function asUint200Cd(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset)  {
    return BytesParsing.asUint200Cd(encoded, offset);
  }

  function asUint200Unchecked(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset)  {
    return BytesParsing.asUint200Unchecked(encoded, offset);
  }

  function asUint200(bytes calldata encoded, uint offset) external pure returns (uint200 ret, uint nextOffset)  {
    return BytesParsing.asUint200(encoded, offset);
  }

  function asUint208CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset)  {
    return BytesParsing.asUint208CdUnchecked(encoded, offset);
  }

  function asUint208Cd(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset)  {
    return BytesParsing.asUint208Cd(encoded, offset);
  }

  function asUint208Unchecked(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset)  {
    return BytesParsing.asUint208Unchecked(encoded, offset);
  }

  function asUint208(bytes calldata encoded, uint offset) external pure returns (uint208 ret, uint nextOffset)  {
    return BytesParsing.asUint208(encoded, offset);
  }

  function asUint216CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset)  {
    return BytesParsing.asUint216CdUnchecked(encoded, offset);
  }

  function asUint216Cd(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset)  {
    return BytesParsing.asUint216Cd(encoded, offset);
  }

  function asUint216Unchecked(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset)  {
    return BytesParsing.asUint216Unchecked(encoded, offset);
  }

  function asUint216(bytes calldata encoded, uint offset) external pure returns (uint216 ret, uint nextOffset)  {
    return BytesParsing.asUint216(encoded, offset);
  }

  function asUint224CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset)  {
    return BytesParsing.asUint224CdUnchecked(encoded, offset);
  }

  function asUint224Cd(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset)  {
    return BytesParsing.asUint224Cd(encoded, offset);
  }

  function asUint224Unchecked(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset)  {
    return BytesParsing.asUint224Unchecked(encoded, offset);
  }

  function asUint224(bytes calldata encoded, uint offset) external pure returns (uint224 ret, uint nextOffset)  {
    return BytesParsing.asUint224(encoded, offset);
  }

  function asUint232CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset)  {
    return BytesParsing.asUint232CdUnchecked(encoded, offset);
  }

  function asUint232Cd(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset)  {
    return BytesParsing.asUint232Cd(encoded, offset);
  }

  function asUint232Unchecked(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset)  {
    return BytesParsing.asUint232Unchecked(encoded, offset);
  }

  function asUint232(bytes calldata encoded, uint offset) external pure returns (uint232 ret, uint nextOffset)  {
    return BytesParsing.asUint232(encoded, offset);
  }

  function asUint240CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset)  {
    return BytesParsing.asUint240CdUnchecked(encoded, offset);
  }

  function asUint240Cd(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset)  {
    return BytesParsing.asUint240Cd(encoded, offset);
  }

  function asUint240Unchecked(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset)  {
    return BytesParsing.asUint240Unchecked(encoded, offset);
  }

  function asUint240(bytes calldata encoded, uint offset) external pure returns (uint240 ret, uint nextOffset)  {
    return BytesParsing.asUint240(encoded, offset);
  }

  function asUint248CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset)  {
    return BytesParsing.asUint248CdUnchecked(encoded, offset);
  }

  function asUint248Cd(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset)  {
    return BytesParsing.asUint248Cd(encoded, offset);
  }

  function asUint248Unchecked(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset)  {
    return BytesParsing.asUint248Unchecked(encoded, offset);
  }

  function asUint248(bytes calldata encoded, uint offset) external pure returns (uint248 ret, uint nextOffset)  {
    return BytesParsing.asUint248(encoded, offset);
  }

  function asUint256CdUnchecked(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset)  {
    return BytesParsing.asUint256CdUnchecked(encoded, offset);
  }

  function asUint256Cd(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset)  {
    return BytesParsing.asUint256Cd(encoded, offset);
  }

  function asUint256Unchecked(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset)  {
    return BytesParsing.asUint256Unchecked(encoded, offset);
  }

  function asUint256(bytes calldata encoded, uint offset) external pure returns (uint256 ret, uint nextOffset)  {
    return BytesParsing.asUint256(encoded, offset);
  }

  function asBytes1CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset)  {
    return BytesParsing.asBytes1CdUnchecked(encoded, offset);
  }

  function asBytes1Cd(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset)  {
    return BytesParsing.asBytes1Cd(encoded, offset);
  }

  function asBytes1Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset)  {
    return BytesParsing.asBytes1Unchecked(encoded, offset);
  }

  function asBytes1(bytes calldata encoded, uint offset) external pure returns (bytes1 ret, uint nextOffset)  {
    return BytesParsing.asBytes1(encoded, offset);
  }

  function asBytes2CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset)  {
    return BytesParsing.asBytes2CdUnchecked(encoded, offset);
  }

  function asBytes2Cd(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset)  {
    return BytesParsing.asBytes2Cd(encoded, offset);
  }

  function asBytes2Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset)  {
    return BytesParsing.asBytes2Unchecked(encoded, offset);
  }

  function asBytes2(bytes calldata encoded, uint offset) external pure returns (bytes2 ret, uint nextOffset)  {
    return BytesParsing.asBytes2(encoded, offset);
  }

  function asBytes3CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset)  {
    return BytesParsing.asBytes3CdUnchecked(encoded, offset);
  }

  function asBytes3Cd(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset)  {
    return BytesParsing.asBytes3Cd(encoded, offset);
  }

  function asBytes3Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset)  {
    return BytesParsing.asBytes3Unchecked(encoded, offset);
  }

  function asBytes3(bytes calldata encoded, uint offset) external pure returns (bytes3 ret, uint nextOffset)  {
    return BytesParsing.asBytes3(encoded, offset);
  }

  function asBytes4CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset)  {
    return BytesParsing.asBytes4CdUnchecked(encoded, offset);
  }

  function asBytes4Cd(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset)  {
    return BytesParsing.asBytes4Cd(encoded, offset);
  }

  function asBytes4Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset)  {
    return BytesParsing.asBytes4Unchecked(encoded, offset);
  }

  function asBytes4(bytes calldata encoded, uint offset) external pure returns (bytes4 ret, uint nextOffset)  {
    return BytesParsing.asBytes4(encoded, offset);
  }

  function asBytes5CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset)  {
    return BytesParsing.asBytes5CdUnchecked(encoded, offset);
  }

  function asBytes5Cd(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset)  {
    return BytesParsing.asBytes5Cd(encoded, offset);
  }

  function asBytes5Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset)  {
    return BytesParsing.asBytes5Unchecked(encoded, offset);
  }

  function asBytes5(bytes calldata encoded, uint offset) external pure returns (bytes5 ret, uint nextOffset)  {
    return BytesParsing.asBytes5(encoded, offset);
  }

  function asBytes6CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset)  {
    return BytesParsing.asBytes6CdUnchecked(encoded, offset);
  }

  function asBytes6Cd(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset)  {
    return BytesParsing.asBytes6Cd(encoded, offset);
  }

  function asBytes6Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset)  {
    return BytesParsing.asBytes6Unchecked(encoded, offset);
  }

  function asBytes6(bytes calldata encoded, uint offset) external pure returns (bytes6 ret, uint nextOffset)  {
    return BytesParsing.asBytes6(encoded, offset);
  }

  function asBytes7CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset)  {
    return BytesParsing.asBytes7CdUnchecked(encoded, offset);
  }

  function asBytes7Cd(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset)  {
    return BytesParsing.asBytes7Cd(encoded, offset);
  }

  function asBytes7Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset)  {
    return BytesParsing.asBytes7Unchecked(encoded, offset);
  }

  function asBytes7(bytes calldata encoded, uint offset) external pure returns (bytes7 ret, uint nextOffset)  {
    return BytesParsing.asBytes7(encoded, offset);
  }

  function asBytes8CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset)  {
    return BytesParsing.asBytes8CdUnchecked(encoded, offset);
  }

  function asBytes8Cd(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset)  {
    return BytesParsing.asBytes8Cd(encoded, offset);
  }

  function asBytes8Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset)  {
    return BytesParsing.asBytes8Unchecked(encoded, offset);
  }

  function asBytes8(bytes calldata encoded, uint offset) external pure returns (bytes8 ret, uint nextOffset)  {
    return BytesParsing.asBytes8(encoded, offset);
  }

  function asBytes9CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset)  {
    return BytesParsing.asBytes9CdUnchecked(encoded, offset);
  }

  function asBytes9Cd(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset)  {
    return BytesParsing.asBytes9Cd(encoded, offset);
  }

  function asBytes9Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset)  {
    return BytesParsing.asBytes9Unchecked(encoded, offset);
  }

  function asBytes9(bytes calldata encoded, uint offset) external pure returns (bytes9 ret, uint nextOffset)  {
    return BytesParsing.asBytes9(encoded, offset);
  }

  function asBytes10CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset)  {
    return BytesParsing.asBytes10CdUnchecked(encoded, offset);
  }

  function asBytes10Cd(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset)  {
    return BytesParsing.asBytes10Cd(encoded, offset);
  }

  function asBytes10Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset)  {
    return BytesParsing.asBytes10Unchecked(encoded, offset);
  }

  function asBytes10(bytes calldata encoded, uint offset) external pure returns (bytes10 ret, uint nextOffset)  {
    return BytesParsing.asBytes10(encoded, offset);
  }

  function asBytes11CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset)  {
    return BytesParsing.asBytes11CdUnchecked(encoded, offset);
  }

  function asBytes11Cd(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset)  {
    return BytesParsing.asBytes11Cd(encoded, offset);
  }

  function asBytes11Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset)  {
    return BytesParsing.asBytes11Unchecked(encoded, offset);
  }

  function asBytes11(bytes calldata encoded, uint offset) external pure returns (bytes11 ret, uint nextOffset)  {
    return BytesParsing.asBytes11(encoded, offset);
  }

  function asBytes12CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset)  {
    return BytesParsing.asBytes12CdUnchecked(encoded, offset);
  }

  function asBytes12Cd(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset)  {
    return BytesParsing.asBytes12Cd(encoded, offset);
  }

  function asBytes12Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset)  {
    return BytesParsing.asBytes12Unchecked(encoded, offset);
  }

  function asBytes12(bytes calldata encoded, uint offset) external pure returns (bytes12 ret, uint nextOffset)  {
    return BytesParsing.asBytes12(encoded, offset);
  }

  function asBytes13CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset)  {
    return BytesParsing.asBytes13CdUnchecked(encoded, offset);
  }

  function asBytes13Cd(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset)  {
    return BytesParsing.asBytes13Cd(encoded, offset);
  }

  function asBytes13Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset)  {
    return BytesParsing.asBytes13Unchecked(encoded, offset);
  }

  function asBytes13(bytes calldata encoded, uint offset) external pure returns (bytes13 ret, uint nextOffset)  {
    return BytesParsing.asBytes13(encoded, offset);
  }

  function asBytes14CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset)  {
    return BytesParsing.asBytes14CdUnchecked(encoded, offset);
  }

  function asBytes14Cd(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset)  {
    return BytesParsing.asBytes14Cd(encoded, offset);
  }

  function asBytes14Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset)  {
    return BytesParsing.asBytes14Unchecked(encoded, offset);
  }

  function asBytes14(bytes calldata encoded, uint offset) external pure returns (bytes14 ret, uint nextOffset)  {
    return BytesParsing.asBytes14(encoded, offset);
  }

  function asBytes15CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset)  {
    return BytesParsing.asBytes15CdUnchecked(encoded, offset);
  }

  function asBytes15Cd(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset)  {
    return BytesParsing.asBytes15Cd(encoded, offset);
  }

  function asBytes15Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset)  {
    return BytesParsing.asBytes15Unchecked(encoded, offset);
  }

  function asBytes15(bytes calldata encoded, uint offset) external pure returns (bytes15 ret, uint nextOffset)  {
    return BytesParsing.asBytes15(encoded, offset);
  }

  function asBytes16CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset)  {
    return BytesParsing.asBytes16CdUnchecked(encoded, offset);
  }

  function asBytes16Cd(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset)  {
    return BytesParsing.asBytes16Cd(encoded, offset);
  }

  function asBytes16Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset)  {
    return BytesParsing.asBytes16Unchecked(encoded, offset);
  }

  function asBytes16(bytes calldata encoded, uint offset) external pure returns (bytes16 ret, uint nextOffset)  {
    return BytesParsing.asBytes16(encoded, offset);
  }

  function asBytes17CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset)  {
    return BytesParsing.asBytes17CdUnchecked(encoded, offset);
  }

  function asBytes17Cd(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset)  {
    return BytesParsing.asBytes17Cd(encoded, offset);
  }

  function asBytes17Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset)  {
    return BytesParsing.asBytes17Unchecked(encoded, offset);
  }

  function asBytes17(bytes calldata encoded, uint offset) external pure returns (bytes17 ret, uint nextOffset)  {
    return BytesParsing.asBytes17(encoded, offset);
  }

  function asBytes18CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset)  {
    return BytesParsing.asBytes18CdUnchecked(encoded, offset);
  }

  function asBytes18Cd(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset)  {
    return BytesParsing.asBytes18Cd(encoded, offset);
  }

  function asBytes18Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset)  {
    return BytesParsing.asBytes18Unchecked(encoded, offset);
  }

  function asBytes18(bytes calldata encoded, uint offset) external pure returns (bytes18 ret, uint nextOffset)  {
    return BytesParsing.asBytes18(encoded, offset);
  }

  function asBytes19CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset)  {
    return BytesParsing.asBytes19CdUnchecked(encoded, offset);
  }

  function asBytes19Cd(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset)  {
    return BytesParsing.asBytes19Cd(encoded, offset);
  }

  function asBytes19Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset)  {
    return BytesParsing.asBytes19Unchecked(encoded, offset);
  }

  function asBytes19(bytes calldata encoded, uint offset) external pure returns (bytes19 ret, uint nextOffset)  {
    return BytesParsing.asBytes19(encoded, offset);
  }

  function asBytes20CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset)  {
    return BytesParsing.asBytes20CdUnchecked(encoded, offset);
  }

  function asBytes20Cd(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset)  {
    return BytesParsing.asBytes20Cd(encoded, offset);
  }

  function asBytes20Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset)  {
    return BytesParsing.asBytes20Unchecked(encoded, offset);
  }

  function asBytes20(bytes calldata encoded, uint offset) external pure returns (bytes20 ret, uint nextOffset)  {
    return BytesParsing.asBytes20(encoded, offset);
  }

  function asBytes21CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset)  {
    return BytesParsing.asBytes21CdUnchecked(encoded, offset);
  }

  function asBytes21Cd(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset)  {
    return BytesParsing.asBytes21Cd(encoded, offset);
  }

  function asBytes21Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset)  {
    return BytesParsing.asBytes21Unchecked(encoded, offset);
  }

  function asBytes21(bytes calldata encoded, uint offset) external pure returns (bytes21 ret, uint nextOffset)  {
    return BytesParsing.asBytes21(encoded, offset);
  }

  function asBytes22CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset)  {
    return BytesParsing.asBytes22CdUnchecked(encoded, offset);
  }

  function asBytes22Cd(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset)  {
    return BytesParsing.asBytes22Cd(encoded, offset);
  }

  function asBytes22Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset)  {
    return BytesParsing.asBytes22Unchecked(encoded, offset);
  }

  function asBytes22(bytes calldata encoded, uint offset) external pure returns (bytes22 ret, uint nextOffset)  {
    return BytesParsing.asBytes22(encoded, offset);
  }

  function asBytes23CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset)  {
    return BytesParsing.asBytes23CdUnchecked(encoded, offset);
  }

  function asBytes23Cd(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset)  {
    return BytesParsing.asBytes23Cd(encoded, offset);
  }

  function asBytes23Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset)  {
    return BytesParsing.asBytes23Unchecked(encoded, offset);
  }

  function asBytes23(bytes calldata encoded, uint offset) external pure returns (bytes23 ret, uint nextOffset)  {
    return BytesParsing.asBytes23(encoded, offset);
  }

  function asBytes24CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset)  {
    return BytesParsing.asBytes24CdUnchecked(encoded, offset);
  }

  function asBytes24Cd(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset)  {
    return BytesParsing.asBytes24Cd(encoded, offset);
  }

  function asBytes24Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset)  {
    return BytesParsing.asBytes24Unchecked(encoded, offset);
  }

  function asBytes24(bytes calldata encoded, uint offset) external pure returns (bytes24 ret, uint nextOffset)  {
    return BytesParsing.asBytes24(encoded, offset);
  }

  function asBytes25CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset)  {
    return BytesParsing.asBytes25CdUnchecked(encoded, offset);
  }

  function asBytes25Cd(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset)  {
    return BytesParsing.asBytes25Cd(encoded, offset);
  }

  function asBytes25Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset)  {
    return BytesParsing.asBytes25Unchecked(encoded, offset);
  }

  function asBytes25(bytes calldata encoded, uint offset) external pure returns (bytes25 ret, uint nextOffset)  {
    return BytesParsing.asBytes25(encoded, offset);
  }

  function asBytes26CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset)  {
    return BytesParsing.asBytes26CdUnchecked(encoded, offset);
  }

  function asBytes26Cd(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset)  {
    return BytesParsing.asBytes26Cd(encoded, offset);
  }

  function asBytes26Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset)  {
    return BytesParsing.asBytes26Unchecked(encoded, offset);
  }

  function asBytes26(bytes calldata encoded, uint offset) external pure returns (bytes26 ret, uint nextOffset)  {
    return BytesParsing.asBytes26(encoded, offset);
  }

  function asBytes27CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset)  {
    return BytesParsing.asBytes27CdUnchecked(encoded, offset);
  }

  function asBytes27Cd(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset)  {
    return BytesParsing.asBytes27Cd(encoded, offset);
  }

  function asBytes27Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset)  {
    return BytesParsing.asBytes27Unchecked(encoded, offset);
  }

  function asBytes27(bytes calldata encoded, uint offset) external pure returns (bytes27 ret, uint nextOffset)  {
    return BytesParsing.asBytes27(encoded, offset);
  }

  function asBytes28CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset)  {
    return BytesParsing.asBytes28CdUnchecked(encoded, offset);
  }

  function asBytes28Cd(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset)  {
    return BytesParsing.asBytes28Cd(encoded, offset);
  }

  function asBytes28Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset)  {
    return BytesParsing.asBytes28Unchecked(encoded, offset);
  }

  function asBytes28(bytes calldata encoded, uint offset) external pure returns (bytes28 ret, uint nextOffset)  {
    return BytesParsing.asBytes28(encoded, offset);
  }

  function asBytes29CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset)  {
    return BytesParsing.asBytes29CdUnchecked(encoded, offset);
  }

  function asBytes29Cd(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset)  {
    return BytesParsing.asBytes29Cd(encoded, offset);
  }

  function asBytes29Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset)  {
    return BytesParsing.asBytes29Unchecked(encoded, offset);
  }

  function asBytes29(bytes calldata encoded, uint offset) external pure returns (bytes29 ret, uint nextOffset)  {
    return BytesParsing.asBytes29(encoded, offset);
  }

  function asBytes30CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset)  {
    return BytesParsing.asBytes30CdUnchecked(encoded, offset);
  }

  function asBytes30Cd(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset)  {
    return BytesParsing.asBytes30Cd(encoded, offset);
  }

  function asBytes30Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset)  {
    return BytesParsing.asBytes30Unchecked(encoded, offset);
  }

  function asBytes30(bytes calldata encoded, uint offset) external pure returns (bytes30 ret, uint nextOffset)  {
    return BytesParsing.asBytes30(encoded, offset);
  }

  function asBytes31CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset)  {
    return BytesParsing.asBytes31CdUnchecked(encoded, offset);
  }

  function asBytes31Cd(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset)  {
    return BytesParsing.asBytes31Cd(encoded, offset);
  }

  function asBytes31Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset)  {
    return BytesParsing.asBytes31Unchecked(encoded, offset);
  }

  function asBytes31(bytes calldata encoded, uint offset) external pure returns (bytes31 ret, uint nextOffset)  {
    return BytesParsing.asBytes31(encoded, offset);
  }

  function asBytes32CdUnchecked(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset)  {
    return BytesParsing.asBytes32CdUnchecked(encoded, offset);
  }

  function asBytes32Cd(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset)  {
    return BytesParsing.asBytes32Cd(encoded, offset);
  }

  function asBytes32Unchecked(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset)  {
    return BytesParsing.asBytes32Unchecked(encoded, offset);
  }

  function asBytes32(bytes calldata encoded, uint offset) external pure returns (bytes32 ret, uint nextOffset)  {
    return BytesParsing.asBytes32(encoded, offset);
  }
}
